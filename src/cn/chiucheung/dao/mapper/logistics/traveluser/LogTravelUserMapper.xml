<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.chiucheung.dao.mapper.logistics.traveluser.LogTravelUserMapper" >
  <resultMap id="BaseResultMap" type="cn.chiucheung.po.logistics.traveluser.LogTravelUser" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="work_no" property="workNo" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="groups_id" property="groupsId" jdbcType="VARCHAR" />
    <result column="is_allowed_login" property="isAllowedLogin" jdbcType="VARCHAR" />
    <result column="device_serial_number" property="deviceSerialNumber" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, work_no, username, password, groups_id, is_allowed_login, device_serial_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_travel_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from log_travel_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from log_travel_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUserExample" >
    delete from log_travel_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUser" >
    insert into log_travel_user (id, work_no, username, 
      password, groups_id, is_allowed_login, 
      device_serial_number)
    values (#{id,jdbcType=VARCHAR}, #{workNo,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{groupsId,jdbcType=VARCHAR}, #{isAllowedLogin,jdbcType=VARCHAR}, 
      #{deviceSerialNumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUser" >
    insert into log_travel_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="workNo != null" >
        work_no,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="groupsId != null" >
        groups_id,
      </if>
      <if test="isAllowedLogin != null" >
        is_allowed_login,
      </if>
      <if test="deviceSerialNumber != null" >
        device_serial_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workNo != null" >
        #{workNo,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="groupsId != null" >
        #{groupsId,jdbcType=VARCHAR},
      </if>
      <if test="isAllowedLogin != null" >
        #{isAllowedLogin,jdbcType=VARCHAR},
      </if>
      <if test="deviceSerialNumber != null" >
        #{deviceSerialNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUserExample" resultType="java.lang.Integer" >
    select count(*) from log_travel_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update log_travel_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.workNo != null" >
        work_no = #{record.workNo,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.groupsId != null" >
        groups_id = #{record.groupsId,jdbcType=VARCHAR},
      </if>
      <if test="record.isAllowedLogin != null" >
        is_allowed_login = #{record.isAllowedLogin,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceSerialNumber != null" >
        device_serial_number = #{record.deviceSerialNumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update log_travel_user
    set id = #{record.id,jdbcType=VARCHAR},
      work_no = #{record.workNo,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      groups_id = #{record.groupsId,jdbcType=VARCHAR},
      is_allowed_login = #{record.isAllowedLogin,jdbcType=VARCHAR},
      device_serial_number = #{record.deviceSerialNumber,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUser" >
    update log_travel_user
    <set >
      <if test="workNo != null" >
        work_no = #{workNo,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="groupsId != null" >
        groups_id = #{groupsId,jdbcType=VARCHAR},
      </if>
      <if test="isAllowedLogin != null" >
        is_allowed_login = #{isAllowedLogin,jdbcType=VARCHAR},
      </if>
      <if test="deviceSerialNumber != null" >
        device_serial_number = #{deviceSerialNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUser" >
    update log_travel_user
    set work_no = #{workNo,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      groups_id = #{groupsId,jdbcType=VARCHAR},
      is_allowed_login = #{isAllowedLogin,jdbcType=VARCHAR},
      device_serial_number = #{deviceSerialNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
    
  
     <!-- 自定义 -->
  <select id="findAllTravelUserList" parameterType="cn.chiucheung.pojo.logistics.travelUser.LogTravelUserQueryVo" resultType="cn.chiucheung.po.logistics.traveluser.LogTravelUser">
  	SELECT
		u.id id,
		u.work_no workNo,
		u.username username,
		d1.dictionarie_name isAllowedLogin,
		d2.dictionarie_name groupsId,
		device_serial_number deviceSerialNumber
	FROM 
		log_travel_user u
	LEFT JOIN sys_dictionarie d1 ON u.is_allowed_login = d1.dictionarie_code AND d1.keyword = '是否允许登陆'
	LEFT JOIN sys_dictionarie d2 ON u.groups_id = d2.dictionarie_code AND d2.keyword = '销售部'
	<where>
		<if test="username != null and username != ''">
			AND u.username LIKE '%${username}%'
		</if>
		<if test="workNo != null and workNo != ''">
			AND u.work_no LIKE '%${workNo}%'
		</if>
		<if test="groupsId != null and groupsId != ''">
			AND u.groups_id = #{groupsId}
		</if>
	</where>
	<if test="sort != null and sort != ''">
		ORDER by #{sort} ${order}
	</if>
	<if test="sort == null or sort == ''">
		ORDER by workNo
	</if>
	<if test="page != 0 and rows != 0">
		LIMIT #{startPage},#{rows}
	</if>
  </select>
  
  <select id="findAllTravelUserTotal" parameterType="cn.chiucheung.pojo.logistics.travelUser.LogTravelUserQueryVo" resultType="string">
  	SELECT
		COUNT(*)
	FROM 
		log_travel_user
	<where>
		<if test="username != null and username != ''">
			AND username LIKE '%${username}%'
		</if>
		<if test="workNo != null and workNo != ''">
			AND work_no LIKE '%${workNo}%'
		</if>
	</where>
  </select>
  
  <select id="findTravelUserByWorkNoAndPassword" parameterType="cn.chiucheung.po.logistics.traveluser.LogTravelUser" resultType="cn.chiucheung.po.logistics.traveluser.LogTravelUser">
  	SELECT
		u.id id,
		u.work_no workNo,
		u.username username,
		u.is_allowed_login isAllowedLogin,
		device_serial_number deviceSerialNumber
	FROM 
		log_travel_user u
	WHERE 
		u.work_no = #{workNo}
	AND
		u.password = #{password}
  </select>
</mapper>