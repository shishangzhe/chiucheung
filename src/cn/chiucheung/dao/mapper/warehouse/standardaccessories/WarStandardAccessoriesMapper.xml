<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.chiucheung.dao.mapper.warehouse.standardaccessories.WarStandardAccessoriesMapper" >
  <resultMap id="BaseResultMap" type="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessories" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="accessories_code" property="accessoriesCode" jdbcType="VARCHAR" />
    <result column="accessories_type" property="accessoriesType" jdbcType="VARCHAR" />
    <result column="accessories_name" property="accessoriesName" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="product" property="product" jdbcType="VARCHAR" />
    <result column="classification" property="classification" jdbcType="VARCHAR" />
    <result column="material_properties" property="materialProperties" jdbcType="VARCHAR" />
    <result column="specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="height" property="height" jdbcType="VARCHAR" />
    <result column="width" property="width" jdbcType="VARCHAR" />
    <result column="depth" property="depth" jdbcType="VARCHAR" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="lowest_warehousing_quantity" property="lowestWarehousingQuantity" jdbcType="INTEGER" />
    <result column="once_produce_quantity" property="onceProduceQuantity" jdbcType="INTEGER" />
    <result column="min_produce_quantity" property="minProduceQuantity" jdbcType="INTEGER" />
    <result column="each_number" property="eachNumber" jdbcType="INTEGER" />
    <result column="warehouse_inventory" property="warehouseInventory" jdbcType="VARCHAR" />
    <result column="warehouse_positions" property="warehousePositions" jdbcType="VARCHAR" />
    <result column="drawing_number" property="drawingNumber" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, accessories_code, accessories_type, accessories_name, unit, product, classification, 
    material_properties, specifications, height, width, depth, color, lowest_warehousing_quantity, 
    once_produce_quantity, min_produce_quantity, each_number, warehouse_inventory, warehouse_positions, 
    drawing_number, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessoriesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from war_standard_accessories
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from war_standard_accessories
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from war_standard_accessories
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessoriesExample" >
    delete from war_standard_accessories
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessories" >
    insert into war_standard_accessories (id, accessories_code, accessories_type, 
      accessories_name, unit, product, 
      classification, material_properties, specifications, 
      height, width, depth, 
      color, lowest_warehousing_quantity, once_produce_quantity, 
      min_produce_quantity, each_number, warehouse_inventory, 
      warehouse_positions, drawing_number, remark
      )
    values (#{id,jdbcType=VARCHAR}, #{accessoriesCode,jdbcType=VARCHAR}, #{accessoriesType,jdbcType=VARCHAR}, 
      #{accessoriesName,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{product,jdbcType=VARCHAR}, 
      #{classification,jdbcType=VARCHAR}, #{materialProperties,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{height,jdbcType=VARCHAR}, #{width,jdbcType=VARCHAR}, #{depth,jdbcType=VARCHAR}, 
      #{color,jdbcType=VARCHAR}, #{lowestWarehousingQuantity,jdbcType=INTEGER}, #{onceProduceQuantity,jdbcType=INTEGER}, 
      #{minProduceQuantity,jdbcType=INTEGER}, #{eachNumber,jdbcType=INTEGER}, #{warehouseInventory,jdbcType=VARCHAR}, 
      #{warehousePositions,jdbcType=VARCHAR}, #{drawingNumber,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessories" >
    insert into war_standard_accessories
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accessoriesCode != null" >
        accessories_code,
      </if>
      <if test="accessoriesType != null" >
        accessories_type,
      </if>
      <if test="accessoriesName != null" >
        accessories_name,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="product != null" >
        product,
      </if>
      <if test="classification != null" >
        classification,
      </if>
      <if test="materialProperties != null" >
        material_properties,
      </if>
      <if test="specifications != null" >
        specifications,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="width != null" >
        width,
      </if>
      <if test="depth != null" >
        depth,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="lowestWarehousingQuantity != null" >
        lowest_warehousing_quantity,
      </if>
      <if test="onceProduceQuantity != null" >
        once_produce_quantity,
      </if>
      <if test="minProduceQuantity != null" >
        min_produce_quantity,
      </if>
      <if test="eachNumber != null" >
        each_number,
      </if>
      <if test="warehouseInventory != null" >
        warehouse_inventory,
      </if>
      <if test="warehousePositions != null" >
        warehouse_positions,
      </if>
      <if test="drawingNumber != null" >
        drawing_number,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="accessoriesCode != null" >
        #{accessoriesCode,jdbcType=VARCHAR},
      </if>
      <if test="accessoriesType != null" >
        #{accessoriesType,jdbcType=VARCHAR},
      </if>
      <if test="accessoriesName != null" >
        #{accessoriesName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="product != null" >
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="classification != null" >
        #{classification,jdbcType=VARCHAR},
      </if>
      <if test="materialProperties != null" >
        #{materialProperties,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="height != null" >
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="width != null" >
        #{width,jdbcType=VARCHAR},
      </if>
      <if test="depth != null" >
        #{depth,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="lowestWarehousingQuantity != null" >
        #{lowestWarehousingQuantity,jdbcType=INTEGER},
      </if>
      <if test="onceProduceQuantity != null" >
        #{onceProduceQuantity,jdbcType=INTEGER},
      </if>
      <if test="minProduceQuantity != null" >
        #{minProduceQuantity,jdbcType=INTEGER},
      </if>
      <if test="eachNumber != null" >
        #{eachNumber,jdbcType=INTEGER},
      </if>
      <if test="warehouseInventory != null" >
        #{warehouseInventory,jdbcType=VARCHAR},
      </if>
      <if test="warehousePositions != null" >
        #{warehousePositions,jdbcType=VARCHAR},
      </if>
      <if test="drawingNumber != null" >
        #{drawingNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessoriesExample" resultType="java.lang.Integer" >
    select count(*) from war_standard_accessories
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update war_standard_accessories
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.accessoriesCode != null" >
        accessories_code = #{record.accessoriesCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accessoriesType != null" >
        accessories_type = #{record.accessoriesType,jdbcType=VARCHAR},
      </if>
      <if test="record.accessoriesName != null" >
        accessories_name = #{record.accessoriesName,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.product != null" >
        product = #{record.product,jdbcType=VARCHAR},
      </if>
      <if test="record.classification != null" >
        classification = #{record.classification,jdbcType=VARCHAR},
      </if>
      <if test="record.materialProperties != null" >
        material_properties = #{record.materialProperties,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null" >
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null" >
        height = #{record.height,jdbcType=VARCHAR},
      </if>
      <if test="record.width != null" >
        width = #{record.width,jdbcType=VARCHAR},
      </if>
      <if test="record.depth != null" >
        depth = #{record.depth,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null" >
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.lowestWarehousingQuantity != null" >
        lowest_warehousing_quantity = #{record.lowestWarehousingQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.onceProduceQuantity != null" >
        once_produce_quantity = #{record.onceProduceQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.minProduceQuantity != null" >
        min_produce_quantity = #{record.minProduceQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.eachNumber != null" >
        each_number = #{record.eachNumber,jdbcType=INTEGER},
      </if>
      <if test="record.warehouseInventory != null" >
        warehouse_inventory = #{record.warehouseInventory,jdbcType=VARCHAR},
      </if>
      <if test="record.warehousePositions != null" >
        warehouse_positions = #{record.warehousePositions,jdbcType=VARCHAR},
      </if>
      <if test="record.drawingNumber != null" >
        drawing_number = #{record.drawingNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update war_standard_accessories
    set id = #{record.id,jdbcType=VARCHAR},
      accessories_code = #{record.accessoriesCode,jdbcType=VARCHAR},
      accessories_type = #{record.accessoriesType,jdbcType=VARCHAR},
      accessories_name = #{record.accessoriesName,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      product = #{record.product,jdbcType=VARCHAR},
      classification = #{record.classification,jdbcType=VARCHAR},
      material_properties = #{record.materialProperties,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      height = #{record.height,jdbcType=VARCHAR},
      width = #{record.width,jdbcType=VARCHAR},
      depth = #{record.depth,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      lowest_warehousing_quantity = #{record.lowestWarehousingQuantity,jdbcType=INTEGER},
      once_produce_quantity = #{record.onceProduceQuantity,jdbcType=INTEGER},
      min_produce_quantity = #{record.minProduceQuantity,jdbcType=INTEGER},
      each_number = #{record.eachNumber,jdbcType=INTEGER},
      warehouse_inventory = #{record.warehouseInventory,jdbcType=VARCHAR},
      warehouse_positions = #{record.warehousePositions,jdbcType=VARCHAR},
      drawing_number = #{record.drawingNumber,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessories" >
    update war_standard_accessories
    <set >
      <if test="accessoriesCode != null" >
        accessories_code = #{accessoriesCode,jdbcType=VARCHAR},
      </if>
      <if test="accessoriesType != null" >
        accessories_type = #{accessoriesType,jdbcType=VARCHAR},
      </if>
      <if test="accessoriesName != null" >
        accessories_name = #{accessoriesName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="product != null" >
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="classification != null" >
        classification = #{classification,jdbcType=VARCHAR},
      </if>
      <if test="materialProperties != null" >
        material_properties = #{materialProperties,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="width != null" >
        width = #{width,jdbcType=VARCHAR},
      </if>
      <if test="depth != null" >
        depth = #{depth,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="lowestWarehousingQuantity != null" >
        lowest_warehousing_quantity = #{lowestWarehousingQuantity,jdbcType=INTEGER},
      </if>
      <if test="onceProduceQuantity != null" >
        once_produce_quantity = #{onceProduceQuantity,jdbcType=INTEGER},
      </if>
      <if test="minProduceQuantity != null" >
        min_produce_quantity = #{minProduceQuantity,jdbcType=INTEGER},
      </if>
      <if test="eachNumber != null" >
        each_number = #{eachNumber,jdbcType=INTEGER},
      </if>
      <if test="warehouseInventory != null" >
        warehouse_inventory = #{warehouseInventory,jdbcType=VARCHAR},
      </if>
      <if test="warehousePositions != null" >
        warehouse_positions = #{warehousePositions,jdbcType=VARCHAR},
      </if>
      <if test="drawingNumber != null" >
        drawing_number = #{drawingNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.chiucheung.po.warehouse.standardaccessories.WarStandardAccessories" >
    update war_standard_accessories
    set accessories_code = #{accessoriesCode,jdbcType=VARCHAR},
      accessories_type = #{accessoriesType,jdbcType=VARCHAR},
      accessories_name = #{accessoriesName,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      product = #{product,jdbcType=VARCHAR},
      classification = #{classification,jdbcType=VARCHAR},
      material_properties = #{materialProperties,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      height = #{height,jdbcType=VARCHAR},
      width = #{width,jdbcType=VARCHAR},
      depth = #{depth,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      lowest_warehousing_quantity = #{lowestWarehousingQuantity,jdbcType=INTEGER},
      once_produce_quantity = #{onceProduceQuantity,jdbcType=INTEGER},
      min_produce_quantity = #{minProduceQuantity,jdbcType=INTEGER},
      each_number = #{eachNumber,jdbcType=INTEGER},
      warehouse_inventory = #{warehouseInventory,jdbcType=VARCHAR},
      warehouse_positions = #{warehousePositions,jdbcType=VARCHAR},
      drawing_number = #{drawingNumber,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    
  
    
  
  <!-- 自定义 -->
  <!-- 根据条件查找所有的标准配件 -->
  <select id="findAllWarStandardAccessoriesList" parameterType="cn.chiucheung.pojo.warehouse.standardaccessories.WarStandardAccessoriesQueryVo" resultType="cn.chiucheung.pojo.warehouse.standardaccessories.WarStandardAccessoriesCustom">
  	SELECT 
		a.id id,
		a.accessories_code accessoriesCode,
		d11.dictionarie_name accessoriesType,
		a.accessories_name accessoriesName,
		d1.dictionarie_name unit,
		a.product product,
		d2.dictionarie_name classification,
		d3.dictionarie_name materialProperties,
		d4.dictionarie_name height,
		d5.dictionarie_name width,
		d6.dictionarie_name depth,
		d7.dictionarie_name color,
		d8.dictionarie_name specifications,
		a.lowest_warehousing_quantity lowestWarehousingQuantity,
		a.once_produce_quantity onceProduceQuantity,
		a.min_produce_quantity minProduceQuantity,
		a.each_number eachNumber,
		d9.dictionarie_name warehouseInventory,
		d10.dictionarie_name warehousePositions,
		a.drawing_number drawingNumber,
		a.remark remark,
		f.id fileId
	FROM 
		war_standard_accessories a
	<if test="relationStartandBomQuery != null and relationStartandBomQuery">
		LEFT JOIN eng_standard_bom b ON b.material_id = a.id
	</if>
	LEFT JOIN war_standard_accessories_file f ON a.id = f.war_standard_accessories_id
	LEFT JOIN war_base_data d1 ON a.unit = d1.dictionarie_code AND d1.keyword = '单位'
	LEFT JOIN war_base_data d2 ON a.classification = d2.dictionarie_code AND d2.keyword = '分类'
	LEFT JOIN war_base_data d3 ON a.material_properties = d3.dictionarie_code AND d3.keyword = '物料属性'
	LEFT JOIN war_base_data d4 ON a.height = d4.dictionarie_code AND d4.keyword = '高度'
	LEFT JOIN war_base_data d5 ON a.width = d5.dictionarie_code AND d5.keyword = '宽度'
	LEFT JOIN war_base_data d6 ON a.depth = d6.dictionarie_code AND d6.keyword = '深度'
	LEFT JOIN war_base_data d7 ON a.color = d7.dictionarie_code AND d7.keyword = '颜色'
	LEFT JOIN war_base_data d8 ON a.specifications = d8.dictionarie_code AND d8.keyword = '规格型号'
	LEFT JOIN war_base_data d9 ON a.warehouse_inventory = d9.dictionarie_code AND d9.keyword = '仓存'
	LEFT JOIN war_base_data d10 ON a.warehouse_positions = d10.dictionarie_code AND d10.keyword = '仓位'
	LEFT JOIN war_base_data d11 ON a.accessories_type = d11.dictionarie_code AND d11.keyword = '类型'
	WHERE 1=1
	<if test="relationStartandBomQuery != null and relationStartandBomQuery">
		AND b.id  IS NULL
	</if>
	<if test="accessoriesCode != null and accessoriesCode != ''">
		AND accessories_code LIKE '%${accessoriesCode}%'
	</if>
	<if test="accessoriesType != null and accessoriesType != ''">
		AND accessories_type = #{accessoriesType}
	</if>
	<if test="accessoriesName != null and accessoriesName != ''">
		AND accessories_name LIKE '%${accessoriesName}%'
	</if>
	<if test="product != null and product != ''">
		AND (product = #{product} OR product LIKE '${product},%' OR product LIKE '%,${product},%' OR product LIKE '%,${product}')
	</if>
	<if test="classification != null and classification != ''">
		AND classification = #{classification}
	</if>
	<if test="materialProperties != null and materialProperties != ''">
		AND material_properties = #{materialProperties}
	</if>
	<if test="specifications != null and specifications != ''">
		AND specifications = #{specifications}
	</if>
	<if test="height != null and height != ''">
		AND (height = #{height} OR height = '' OR height IS NULL)
	</if>
	<if test="width != null and width != ''">
		AND (width = #{width} OR width = '' OR width IS NULL)
	</if>
	<if test="depth != null and depth != ''">
		AND (depth = #{depth} OR depth = '' OR depth IS NULL)
	</if>
	<if test="color != null and color != ''">
		AND color = #{color}
	</if>
	<if test="warehouseInventory != null and warehouseInventory != ''">
		AND warehouse_inventory = #{warehouseInventory}
	</if>
	<if test="warehousePositions != null and warehousePositions != ''">
		AND warehouse_positions = #{warehousePositions}
	</if>
	<if test="notInId != null and notInId.size>0">
  		AND a.id NOT IN
  		<foreach collection="notInId" item="id" open="(" separator="," close=")">
  			#{id}
  		</foreach>
  	</if>
	<if test="sort != null and sort != ''">
		ORDER by #{sort} ${order}
	</if>
	<if test="sort == null or sort == ''">
		ORDER by accessories_name
	</if>
	<if test="page != 0 and rows != 0">
		LIMIT #{startPage},#{rows}
	</if>
  </select>
  
  
  <!-- 根据条件查找所有配件的总数 -->
  <select id="findAllWarStandardAccessoriesTotal" parameterType="cn.chiucheung.pojo.warehouse.standardaccessories.WarStandardAccessoriesQueryVo" resultType="string">
  	SELECT 
		COUNT(*)
	FROM 
		war_standard_accessories
	<if test="relationStartandBomQuery != null and relationStartandBomQuery">
		LEFT JOIN eng_standard_bom b ON b.material_id = a.id
	</if>
	WHERE 1=1
	<if test="relationStartandBomQuery != null and relationStartandBomQuery">
		AND b.id  IS NULL
	</if>
	<if test="accessoriesCode != null and accessoriesCode != ''">
		AND accessories_code LIKE '%${accessoriesCode}%'
	</if>
	<if test="accessoriesType != null and accessoriesType != ''">
		AND accessories_type = #{accessoriesType}
	</if>
	<if test="accessoriesName != null and accessoriesName != ''">
		AND accessories_name like '%${accessoriesName}%'
	</if>
	<if test="product != null and product != ''">
		AND (product = #{product} OR product LIKE '${product},%' OR product LIKE '%,${product},%' OR product LIKE '%,${product}')
	</if>
	<if test="classification != null and classification != ''">
		AND classification = #{classification}
	</if>
	<if test="materialProperties != null and materialProperties != ''">
		AND material_properties = #{materialProperties}
	</if>
	<if test="specifications != null and specifications != ''">
		AND specifications = #{specifications}
	</if>
	<if test="height != null and height != ''">
		AND (height = #{height} OR height = '' OR height IS NULL)
	</if>
	<if test="width != null and width != ''">
		AND (width = #{width} OR width = '' OR width IS NULL)
	</if>
	<if test="depth != null and depth != ''">
		AND (depth = #{depth} OR depth = '' OR depth IS NULL)
	</if>
	<if test="color != null and color != ''">
		AND color = #{color}
	</if>
	<if test="warehouseInventory != null and warehouseInventory != ''">
		AND warehouse_inventory = #{warehouseInventory}
	</if>
	<if test="warehousePositions != null and warehousePositions != ''">
		AND warehouse_positions = #{warehousePositions}
	</if>
	<if test="notInId != null and notInId.size>0">
  		AND id NOT IN
  		<foreach collection="notInId" item="id" open="(" separator="," close=")">
  			#{id}
  		</foreach>
  	</if>
  </select>
</mapper>