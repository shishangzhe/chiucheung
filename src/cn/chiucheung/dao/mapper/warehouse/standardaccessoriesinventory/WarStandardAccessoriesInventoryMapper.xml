<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.chiucheung.dao.mapper.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventoryMapper" >
  <resultMap id="BaseResultMap" type="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventory" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="existing_quantity" property="existingQuantity" jdbcType="INTEGER" />
    <result column="war_standard_accessories_id" property="warStandardAccessoriesId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, existing_quantity, war_standard_accessories_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from war_standard_accessories_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from war_standard_accessories_inventory
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from war_standard_accessories_inventory
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventoryExample" >
    delete from war_standard_accessories_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventory" >
    insert into war_standard_accessories_inventory (id, existing_quantity, war_standard_accessories_id
      )
    values (#{id,jdbcType=VARCHAR}, #{existingQuantity,jdbcType=INTEGER}, #{warStandardAccessoriesId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventory" >
    insert into war_standard_accessories_inventory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="existingQuantity != null" >
        existing_quantity,
      </if>
      <if test="warStandardAccessoriesId != null" >
        war_standard_accessories_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="existingQuantity != null" >
        #{existingQuantity,jdbcType=INTEGER},
      </if>
      <if test="warStandardAccessoriesId != null" >
        #{warStandardAccessoriesId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventoryExample" resultType="java.lang.Integer" >
    select count(*) from war_standard_accessories_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update war_standard_accessories_inventory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.existingQuantity != null" >
        existing_quantity = #{record.existingQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.warStandardAccessoriesId != null" >
        war_standard_accessories_id = #{record.warStandardAccessoriesId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update war_standard_accessories_inventory
    set id = #{record.id,jdbcType=VARCHAR},
      existing_quantity = #{record.existingQuantity,jdbcType=INTEGER},
      war_standard_accessories_id = #{record.warStandardAccessoriesId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventory" >
    update war_standard_accessories_inventory
    <set >
      <if test="existingQuantity != null" >
        existing_quantity = #{existingQuantity,jdbcType=INTEGER},
      </if>
      <if test="warStandardAccessoriesId != null" >
        war_standard_accessories_id = #{warStandardAccessoriesId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.chiucheung.po.warehouse.standardaccessoriesinventory.WarStandardAccessoriesInventory" >
    update war_standard_accessories_inventory
    set existing_quantity = #{existingQuantity,jdbcType=INTEGER},
      war_standard_accessories_id = #{warStandardAccessoriesId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  
  
  <!-- 自定义 -->
  <!-- 根据条件查找所有的标准配件 -->
  <select id="findAllWarStandardAccessoriesInventoryList" parameterType="cn.chiucheung.pojo.warehouse.standardaccessories.WarStandardAccessoriesQueryVo" resultType="cn.chiucheung.pojo.warehouse.standardaccessories.WarStandardAccessoriesInventoryCustom">
  	SELECT 
		a.id id,
		a.accessories_code accessoriesCode,
		a.accessories_name accessoriesName,
		d1.dictionarie_name unit,
		a.product product,
		d2.dictionarie_name classification,
		d3.dictionarie_name materialProperties,
		d4.dictionarie_name height,
		d5.dictionarie_name width,
		d6.dictionarie_name depth,
		d7.dictionarie_name color,
		d8.dictionarie_name specifications,
		a.lowest_warehousing_quantity lowestWarehousingQuantity,
		a.once_produce_quantity onceProduceQuantity,
		a.min_produce_quantity minProduceQuantity,
		a.each_number eachNumber,
		d9.dictionarie_name warehouseInventory,
		d10.dictionarie_name warehousePositions,
		a.drawing_number drawingNumber,
		a.remark remark,
		f.id fileId,
		i.existing_quantity existingQuantity,
		i.id id,
		IFNULL(s.quantity,0) expectQuantity,
		IFNULL(ws.quantity,0) occupyQuantity
	FROM 
		war_standard_accessories a
	LEFT JOIN war_standard_accessories_inventory i ON a.id = i.war_standard_accessories_id
	LEFT JOIN war_standard_accessories_file f ON a.id = f.war_standard_accessories_id
	LEFT JOIN war_base_data d1 ON a.unit = d1.dictionarie_code AND d1.keyword = '单位'
	LEFT JOIN war_base_data d2 ON a.classification = d2.dictionarie_code AND d2.keyword = '分类'
	LEFT JOIN war_base_data d3 ON a.material_properties = d3.dictionarie_code AND d3.keyword = '物料属性'
	LEFT JOIN war_base_data d4 ON a.height = d4.dictionarie_code AND d4.keyword = '高度'
	LEFT JOIN war_base_data d5 ON a.width = d5.dictionarie_code AND d5.keyword = '宽度'
	LEFT JOIN war_base_data d6 ON a.depth = d6.dictionarie_code AND d6.keyword = '深度'
	LEFT JOIN war_base_data d7 ON a.color = d7.dictionarie_code AND d7.keyword = '颜色'
	LEFT JOIN war_base_data d8 ON a.specifications = d8.dictionarie_code AND d8.keyword = '规格型号'
	LEFT JOIN war_base_data d9 ON a.warehouse_inventory = d9.dictionarie_code AND d9.keyword = '仓存'
	LEFT JOIN war_base_data d10 ON a.warehouse_positions = d10.dictionarie_code AND d10.keyword = '仓位'
	LEFT JOIN (
				SELECT 
					ps.war_standard_accessories_id war_standard_accessories_id,
					SUM(ps.quantity)-IFNULL(ws.quantity,0) quantity
				FROM 
					pro_storage_warehouse_work_card_subsidiary ps
					INNER JOIN pro_storage_warehouse_work_card pc ON ps.pro_storage_warehouse_work_card_id = pc.id 
					LEFT JOIN
					(
						SELECT
							SUM(ws.quantity) quantity,
							ws.pro_storage_warehouse_work_card_subsidiary_id,
							ps.war_standard_accessories_id
						FROM
							war_standard_accessories_stock_in_subsidiary ws,
							war_standard_accessories_stock_in wi,
							pro_storage_warehouse_work_card_subsidiary ps, 
							act_hi_procinst p 
						WHERE
							ws.war_standard_accessories_stock_in_id = wi.id
						AND
							ws.pro_storage_warehouse_work_card_subsidiary_id = ps.id
						AND
							wi.process_instance_id = p.PROC_INST_ID_
						AND
							p.END_TIME_ IS NOT NULL
						GROUP BY ps.war_standard_accessories_id
					) ws ON ps.war_standard_accessories_id = ws.war_standard_accessories_id
					INNER JOIN act_hi_procinst p ON pc.process_instance_id = p.PROC_INST_ID_ AND p.END_TIME_ IS NOT NULL	
				GROUP BY ps.war_standard_accessories_id
	) s ON a.id = s.war_standard_accessories_id
	LEFT JOIN (
		SELECT
			ws.quantity,
			ws.war_standard_accessories_id
		FROM
			war_standard_accessories_stock_out w,
			war_standard_accessories_stock_out_subsidiary ws,
			act_hi_procinst p
		WHERE
			ws.war_standard_accessories_stock_out_id = w.id
		AND
			w.process_instance_id = p.PROC_INST_ID_
		AND
			p.END_TIME_ IS NULL
		GROUP BY ws.war_standard_accessories_id
	) ws ON ws.war_standard_accessories_id = a.id
	WHERE 1=1
	<if test="accessoriesCode != null and accessoriesCode != ''">
		AND accessories_code LIKE '%${accessoriesCode}%'
	</if>
	<if test="accessoriesName != null and accessoriesName != ''">
		AND a.accessories_name LIKE '%${accessoriesName}%'
	</if>
	<if test="product != null and product != ''">
		AND (a.product LIKE '%,${product},%' OR a.product LIKE '%,${product}')
	</if>
	<if test="classification != null and classification != ''">
		AND a.classification = #{classification}
	</if>
	<if test="materialProperties != null and materialProperties != ''">
		AND a.material_properties = #{materialProperties}
	</if>
	<if test="specifications != null and specifications != ''">
		AND a.specifications = #{specifications}
	</if>
	<if test="height != null and height != ''">
		AND (a.height = #{height} OR a.height = '' OR a.height IS NULL)
	</if>
	<if test="width != null and width != ''">
		AND (a.width = #{width} OR a.width = '' OR a.width IS NULL)
	</if>
	<if test="depth != null and depth != ''">
		AND (a.depth = #{depth} OR a.depth = '' OR a.depth IS NULL)
	</if>
	<if test="color != null and color != ''">
		AND a.color = #{color}
	</if>
	<if test="warehouseInventory != null and warehouseInventory != ''">
		AND a.warehouse_inventory = #{warehouseInventory}
	</if>
	<if test="warehousePositions != null and warehousePositions != ''">
		AND a.warehouse_positions = #{warehousePositions}
	</if>
	<if test="lowestWarehousingQuantity == 'true'">
		AND a.lowest_warehousing_quantity &gt;= i.existing_quantity
	</if>
	<if test="lowestWarehousingQuantity == 'false'">
		AND a.lowest_warehousing_quantity &lt; i.existing_quantity
	</if>
	<if test="notInId != null and notInId.size>0">
  		AND a.id NOT IN
  		<foreach collection="notInId" item="id" open="(" separator="," close=")">
  			#{id}
  		</foreach>
  	</if>
	<if test="sort != null and sort != ''">
		ORDER by #{sort} ${order}
	</if>
	<if test="sort == null or sort == ''">
		ORDER by accessories_name
	</if>
	<if test="page != 0 and rows != 0">
		LIMIT #{startPage},#{rows}
	</if>
  </select>
  
  
  <!-- 根据条件查找所有配件的总数 -->
  <select id="findAllWarStandardAccessoriesInventoryTotal" parameterType="cn.chiucheung.pojo.warehouse.standardaccessories.WarStandardAccessoriesQueryVo" resultType="string">
  	SELECT 
		COUNT(*)
	FROM 
		war_standard_accessories a
	LEFT JOIN war_standard_accessories_inventory i ON a.id = i.war_standard_accessories_id
	WHERE 1=1
	<if test="accessoriesCode != null and accessoriesCode != ''">
		AND accessories_code LIKE '%${accessoriesCode}%'
	</if>
	<if test="accessoriesName != null and accessoriesName != ''">
		AND a.accessories_name like '%${accessoriesName}%'
	</if>
	<if test="product != null and product != ''">
		AND (a.product LIKE '%,${product},%' OR a.product LIKE '%,${product}')
	</if>
	<if test="classification != null and classification != ''">
		AND a.classification = #{classification}
	</if>
	<if test="materialProperties != null and materialProperties != ''">
		AND a.material_properties = #{materialProperties}
	</if>
	<if test="specifications != null and specifications != ''">
		AND a.specifications = #{specifications}
	</if>
	<if test="height != null and height != ''">
		AND (a.height = #{height} OR a.height = '' OR a.height IS NULL)
	</if>
	<if test="width != null and width != ''">
		AND (a.width = #{width} OR a.width = '' OR a.width IS NULL)
	</if>
	<if test="depth != null and depth != ''">
		AND (a.depth = #{depth} OR a.depth = '' OR a.depth IS NULL)
	</if>
	<if test="color != null and color != ''">
		AND a.color = #{color}
	</if>
	<if test="warehouseInventory != null and warehouseInventory != ''">
		AND a.warehouse_inventory = #{warehouseInventory}
	</if>
	<if test="warehousePositions != null and warehousePositions != ''">
		AND a.warehouse_positions = #{warehousePositions}
	</if>
	<if test="lowestWarehousingQuantity == 'true'">
		AND a.lowest_warehousing_quantity &gt;= i.existing_quantity
	</if>
	<if test="lowestWarehousingQuantity == 'false'">
		AND a.lowest_warehousing_quantity &lt; i.existing_quantity
	</if>
	<if test="notInId != null and notInId.size>0">
  		AND a.id NOT IN
  		<foreach collection="notInId" item="id" open="(" separator="," close=")">
  			#{id}
  		</foreach>
  	</if>
  </select>
</mapper>