<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.chiucheung.dao.mapper.sales.workcard.SalWorkCardDsqMapper" >
  <resultMap id="BaseResultMap" type="cn.chiucheung.po.sales.workcard.SalWorkCardDsq" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="sequence" property="sequence" jdbcType="VARCHAR" />
    <result column="bottom_back_door" property="bottomBackDoor" jdbcType="VARCHAR" />
    <result column="bbd_quantity" property="bbdQuantity" jdbcType="VARCHAR" />
    <result column="bbd_remark" property="bbdRemark" jdbcType="VARCHAR" />
    <result column="after_the" property="afterThe" jdbcType="VARCHAR" />
    <result column="at_quantity" property="atQuantity" jdbcType="VARCHAR" />
    <result column="at_remark" property="atRemark" jdbcType="VARCHAR" />
    <result column="bottom_ark_layer_board" property="bottomArkLayerBoard" jdbcType="VARCHAR" />
    <result column="balb_quantity" property="balbQuantity" jdbcType="VARCHAR" />
    <result column="balb_remark" property="balbRemark" jdbcType="VARCHAR" />
    <result column="c_quantity" property="cQuantity" jdbcType="VARCHAR" />
    <result column="c_remark" property="cRemark" jdbcType="VARCHAR" />
    <result column="power_brand" property="powerBrand" jdbcType="VARCHAR" />
    <result column="power_digits" property="powerDigits" jdbcType="VARCHAR" />
    <result column="power_shell_color" property="powerShellColor" jdbcType="VARCHAR" />
    <result column="power_socket_way" property="powerSocketWay" jdbcType="VARCHAR" />
    <result column="power_cord" property="powerCord" jdbcType="VARCHAR" />
    <result column="power_wiring" property="powerWiring" jdbcType="VARCHAR" />
    <result column="power_wiring_length" property="powerWiringLength" jdbcType="VARCHAR" />
    <result column="power_plug" property="powerPlug" jdbcType="VARCHAR" />
    <result column="p_quantity" property="pQuantity" jdbcType="VARCHAR" />
    <result column="other_power" property="otherPower" jdbcType="VARCHAR" />
    <result column="op_quantity" property="opQuantity" jdbcType="VARCHAR" />
    <result column="op_remark" property="opRemark" jdbcType="VARCHAR" />
    <result column="nc_quantity" property="ncQuantity" jdbcType="VARCHAR" />
    <result column="nc_remark" property="ncRemark" jdbcType="VARCHAR" />
    <result column="mv_quantity" property="mvQuantity" jdbcType="VARCHAR" />
    <result column="mv_remark" property="mvRemark" jdbcType="VARCHAR" />
    <result column="sal_work_card_subsidiary_id" property="salWorkCardSubsidiaryId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.chiucheung.po.sales.workcard.SalWorkCardDsqWithBLOBs" extends="BaseResultMap" >
    <result column="bedplate_color" property="bedplateColor" jdbcType="LONGVARCHAR" />
    <result column="bc_remark" property="bcRemark" jdbcType="LONGVARCHAR" />
    <result column="p_remark" property="pRemark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sequence, bottom_back_door, bbd_quantity, bbd_remark, after_the, at_quantity, 
    at_remark, bottom_ark_layer_board, balb_quantity, balb_remark, c_quantity, c_remark, 
    power_brand, power_digits, power_shell_color, power_socket_way, power_cord, power_wiring, 
    power_wiring_length, power_plug, p_quantity, other_power, op_quantity, op_remark, 
    nc_quantity, nc_remark, mv_quantity, mv_remark, sal_work_card_subsidiary_id
  </sql>
  <sql id="Blob_Column_List" >
    bedplate_color, bc_remark, p_remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sal_work_card_dsq
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sal_work_card_dsq
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sal_work_card_dsq
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sal_work_card_dsq
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqExample" >
    delete from sal_work_card_dsq
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqWithBLOBs" >
    insert into sal_work_card_dsq (id, sequence, bottom_back_door, 
      bbd_quantity, bbd_remark, after_the, 
      at_quantity, at_remark, bottom_ark_layer_board, 
      balb_quantity, balb_remark, c_quantity, 
      c_remark, power_brand, power_digits, 
      power_shell_color, power_socket_way, power_cord, 
      power_wiring, power_wiring_length, power_plug, 
      p_quantity, other_power, op_quantity, 
      op_remark, nc_quantity, nc_remark, 
      mv_quantity, mv_remark, sal_work_card_subsidiary_id, 
      bedplate_color, bc_remark, p_remark
      )
    values (#{id,jdbcType=VARCHAR}, #{sequence,jdbcType=VARCHAR}, #{bottomBackDoor,jdbcType=VARCHAR}, 
      #{bbdQuantity,jdbcType=VARCHAR}, #{bbdRemark,jdbcType=VARCHAR}, #{afterThe,jdbcType=VARCHAR}, 
      #{atQuantity,jdbcType=VARCHAR}, #{atRemark,jdbcType=VARCHAR}, #{bottomArkLayerBoard,jdbcType=VARCHAR}, 
      #{balbQuantity,jdbcType=VARCHAR}, #{balbRemark,jdbcType=VARCHAR}, #{cQuantity,jdbcType=VARCHAR}, 
      #{cRemark,jdbcType=VARCHAR}, #{powerBrand,jdbcType=VARCHAR}, #{powerDigits,jdbcType=VARCHAR}, 
      #{powerShellColor,jdbcType=VARCHAR}, #{powerSocketWay,jdbcType=VARCHAR}, #{powerCord,jdbcType=VARCHAR}, 
      #{powerWiring,jdbcType=VARCHAR}, #{powerWiringLength,jdbcType=VARCHAR}, #{powerPlug,jdbcType=VARCHAR}, 
      #{pQuantity,jdbcType=VARCHAR}, #{otherPower,jdbcType=VARCHAR}, #{opQuantity,jdbcType=VARCHAR}, 
      #{opRemark,jdbcType=VARCHAR}, #{ncQuantity,jdbcType=VARCHAR}, #{ncRemark,jdbcType=VARCHAR}, 
      #{mvQuantity,jdbcType=VARCHAR}, #{mvRemark,jdbcType=VARCHAR}, #{salWorkCardSubsidiaryId,jdbcType=VARCHAR}, 
      #{bedplateColor,jdbcType=LONGVARCHAR}, #{bcRemark,jdbcType=LONGVARCHAR}, #{pRemark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqWithBLOBs" >
    insert into sal_work_card_dsq
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="bottomBackDoor != null" >
        bottom_back_door,
      </if>
      <if test="bbdQuantity != null" >
        bbd_quantity,
      </if>
      <if test="bbdRemark != null" >
        bbd_remark,
      </if>
      <if test="afterThe != null" >
        after_the,
      </if>
      <if test="atQuantity != null" >
        at_quantity,
      </if>
      <if test="atRemark != null" >
        at_remark,
      </if>
      <if test="bottomArkLayerBoard != null" >
        bottom_ark_layer_board,
      </if>
      <if test="balbQuantity != null" >
        balb_quantity,
      </if>
      <if test="balbRemark != null" >
        balb_remark,
      </if>
      <if test="cQuantity != null" >
        c_quantity,
      </if>
      <if test="cRemark != null" >
        c_remark,
      </if>
      <if test="powerBrand != null" >
        power_brand,
      </if>
      <if test="powerDigits != null" >
        power_digits,
      </if>
      <if test="powerShellColor != null" >
        power_shell_color,
      </if>
      <if test="powerSocketWay != null" >
        power_socket_way,
      </if>
      <if test="powerCord != null" >
        power_cord,
      </if>
      <if test="powerWiring != null" >
        power_wiring,
      </if>
      <if test="powerWiringLength != null" >
        power_wiring_length,
      </if>
      <if test="powerPlug != null" >
        power_plug,
      </if>
      <if test="pQuantity != null" >
        p_quantity,
      </if>
      <if test="otherPower != null" >
        other_power,
      </if>
      <if test="opQuantity != null" >
        op_quantity,
      </if>
      <if test="opRemark != null" >
        op_remark,
      </if>
      <if test="ncQuantity != null" >
        nc_quantity,
      </if>
      <if test="ncRemark != null" >
        nc_remark,
      </if>
      <if test="mvQuantity != null" >
        mv_quantity,
      </if>
      <if test="mvRemark != null" >
        mv_remark,
      </if>
      <if test="salWorkCardSubsidiaryId != null" >
        sal_work_card_subsidiary_id,
      </if>
      <if test="bedplateColor != null" >
        bedplate_color,
      </if>
      <if test="bcRemark != null" >
        bc_remark,
      </if>
      <if test="pRemark != null" >
        p_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=VARCHAR},
      </if>
      <if test="bottomBackDoor != null" >
        #{bottomBackDoor,jdbcType=VARCHAR},
      </if>
      <if test="bbdQuantity != null" >
        #{bbdQuantity,jdbcType=VARCHAR},
      </if>
      <if test="bbdRemark != null" >
        #{bbdRemark,jdbcType=VARCHAR},
      </if>
      <if test="afterThe != null" >
        #{afterThe,jdbcType=VARCHAR},
      </if>
      <if test="atQuantity != null" >
        #{atQuantity,jdbcType=VARCHAR},
      </if>
      <if test="atRemark != null" >
        #{atRemark,jdbcType=VARCHAR},
      </if>
      <if test="bottomArkLayerBoard != null" >
        #{bottomArkLayerBoard,jdbcType=VARCHAR},
      </if>
      <if test="balbQuantity != null" >
        #{balbQuantity,jdbcType=VARCHAR},
      </if>
      <if test="balbRemark != null" >
        #{balbRemark,jdbcType=VARCHAR},
      </if>
      <if test="cQuantity != null" >
        #{cQuantity,jdbcType=VARCHAR},
      </if>
      <if test="cRemark != null" >
        #{cRemark,jdbcType=VARCHAR},
      </if>
      <if test="powerBrand != null" >
        #{powerBrand,jdbcType=VARCHAR},
      </if>
      <if test="powerDigits != null" >
        #{powerDigits,jdbcType=VARCHAR},
      </if>
      <if test="powerShellColor != null" >
        #{powerShellColor,jdbcType=VARCHAR},
      </if>
      <if test="powerSocketWay != null" >
        #{powerSocketWay,jdbcType=VARCHAR},
      </if>
      <if test="powerCord != null" >
        #{powerCord,jdbcType=VARCHAR},
      </if>
      <if test="powerWiring != null" >
        #{powerWiring,jdbcType=VARCHAR},
      </if>
      <if test="powerWiringLength != null" >
        #{powerWiringLength,jdbcType=VARCHAR},
      </if>
      <if test="powerPlug != null" >
        #{powerPlug,jdbcType=VARCHAR},
      </if>
      <if test="pQuantity != null" >
        #{pQuantity,jdbcType=VARCHAR},
      </if>
      <if test="otherPower != null" >
        #{otherPower,jdbcType=VARCHAR},
      </if>
      <if test="opQuantity != null" >
        #{opQuantity,jdbcType=VARCHAR},
      </if>
      <if test="opRemark != null" >
        #{opRemark,jdbcType=VARCHAR},
      </if>
      <if test="ncQuantity != null" >
        #{ncQuantity,jdbcType=VARCHAR},
      </if>
      <if test="ncRemark != null" >
        #{ncRemark,jdbcType=VARCHAR},
      </if>
      <if test="mvQuantity != null" >
        #{mvQuantity,jdbcType=VARCHAR},
      </if>
      <if test="mvRemark != null" >
        #{mvRemark,jdbcType=VARCHAR},
      </if>
      <if test="salWorkCardSubsidiaryId != null" >
        #{salWorkCardSubsidiaryId,jdbcType=VARCHAR},
      </if>
      <if test="bedplateColor != null" >
        #{bedplateColor,jdbcType=LONGVARCHAR},
      </if>
      <if test="bcRemark != null" >
        #{bcRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="pRemark != null" >
        #{pRemark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqExample" resultType="java.lang.Integer" >
    select count(*) from sal_work_card_dsq
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sal_work_card_dsq
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=VARCHAR},
      </if>
      <if test="record.bottomBackDoor != null" >
        bottom_back_door = #{record.bottomBackDoor,jdbcType=VARCHAR},
      </if>
      <if test="record.bbdQuantity != null" >
        bbd_quantity = #{record.bbdQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.bbdRemark != null" >
        bbd_remark = #{record.bbdRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.afterThe != null" >
        after_the = #{record.afterThe,jdbcType=VARCHAR},
      </if>
      <if test="record.atQuantity != null" >
        at_quantity = #{record.atQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.atRemark != null" >
        at_remark = #{record.atRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.bottomArkLayerBoard != null" >
        bottom_ark_layer_board = #{record.bottomArkLayerBoard,jdbcType=VARCHAR},
      </if>
      <if test="record.balbQuantity != null" >
        balb_quantity = #{record.balbQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.balbRemark != null" >
        balb_remark = #{record.balbRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.cQuantity != null" >
        c_quantity = #{record.cQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.cRemark != null" >
        c_remark = #{record.cRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.powerBrand != null" >
        power_brand = #{record.powerBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.powerDigits != null" >
        power_digits = #{record.powerDigits,jdbcType=VARCHAR},
      </if>
      <if test="record.powerShellColor != null" >
        power_shell_color = #{record.powerShellColor,jdbcType=VARCHAR},
      </if>
      <if test="record.powerSocketWay != null" >
        power_socket_way = #{record.powerSocketWay,jdbcType=VARCHAR},
      </if>
      <if test="record.powerCord != null" >
        power_cord = #{record.powerCord,jdbcType=VARCHAR},
      </if>
      <if test="record.powerWiring != null" >
        power_wiring = #{record.powerWiring,jdbcType=VARCHAR},
      </if>
      <if test="record.powerWiringLength != null" >
        power_wiring_length = #{record.powerWiringLength,jdbcType=VARCHAR},
      </if>
      <if test="record.powerPlug != null" >
        power_plug = #{record.powerPlug,jdbcType=VARCHAR},
      </if>
      <if test="record.pQuantity != null" >
        p_quantity = #{record.pQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.otherPower != null" >
        other_power = #{record.otherPower,jdbcType=VARCHAR},
      </if>
      <if test="record.opQuantity != null" >
        op_quantity = #{record.opQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.opRemark != null" >
        op_remark = #{record.opRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.ncQuantity != null" >
        nc_quantity = #{record.ncQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.ncRemark != null" >
        nc_remark = #{record.ncRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.mvQuantity != null" >
        mv_quantity = #{record.mvQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.mvRemark != null" >
        mv_remark = #{record.mvRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.salWorkCardSubsidiaryId != null" >
        sal_work_card_subsidiary_id = #{record.salWorkCardSubsidiaryId,jdbcType=VARCHAR},
      </if>
      <if test="record.bedplateColor != null" >
        bedplate_color = #{record.bedplateColor,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bcRemark != null" >
        bc_remark = #{record.bcRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.pRemark != null" >
        p_remark = #{record.pRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sal_work_card_dsq
    set id = #{record.id,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=VARCHAR},
      bottom_back_door = #{record.bottomBackDoor,jdbcType=VARCHAR},
      bbd_quantity = #{record.bbdQuantity,jdbcType=VARCHAR},
      bbd_remark = #{record.bbdRemark,jdbcType=VARCHAR},
      after_the = #{record.afterThe,jdbcType=VARCHAR},
      at_quantity = #{record.atQuantity,jdbcType=VARCHAR},
      at_remark = #{record.atRemark,jdbcType=VARCHAR},
      bottom_ark_layer_board = #{record.bottomArkLayerBoard,jdbcType=VARCHAR},
      balb_quantity = #{record.balbQuantity,jdbcType=VARCHAR},
      balb_remark = #{record.balbRemark,jdbcType=VARCHAR},
      c_quantity = #{record.cQuantity,jdbcType=VARCHAR},
      c_remark = #{record.cRemark,jdbcType=VARCHAR},
      power_brand = #{record.powerBrand,jdbcType=VARCHAR},
      power_digits = #{record.powerDigits,jdbcType=VARCHAR},
      power_shell_color = #{record.powerShellColor,jdbcType=VARCHAR},
      power_socket_way = #{record.powerSocketWay,jdbcType=VARCHAR},
      power_cord = #{record.powerCord,jdbcType=VARCHAR},
      power_wiring = #{record.powerWiring,jdbcType=VARCHAR},
      power_wiring_length = #{record.powerWiringLength,jdbcType=VARCHAR},
      power_plug = #{record.powerPlug,jdbcType=VARCHAR},
      p_quantity = #{record.pQuantity,jdbcType=VARCHAR},
      other_power = #{record.otherPower,jdbcType=VARCHAR},
      op_quantity = #{record.opQuantity,jdbcType=VARCHAR},
      op_remark = #{record.opRemark,jdbcType=VARCHAR},
      nc_quantity = #{record.ncQuantity,jdbcType=VARCHAR},
      nc_remark = #{record.ncRemark,jdbcType=VARCHAR},
      mv_quantity = #{record.mvQuantity,jdbcType=VARCHAR},
      mv_remark = #{record.mvRemark,jdbcType=VARCHAR},
      sal_work_card_subsidiary_id = #{record.salWorkCardSubsidiaryId,jdbcType=VARCHAR},
      bedplate_color = #{record.bedplateColor,jdbcType=LONGVARCHAR},
      bc_remark = #{record.bcRemark,jdbcType=LONGVARCHAR},
      p_remark = #{record.pRemark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sal_work_card_dsq
    set id = #{record.id,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=VARCHAR},
      bottom_back_door = #{record.bottomBackDoor,jdbcType=VARCHAR},
      bbd_quantity = #{record.bbdQuantity,jdbcType=VARCHAR},
      bbd_remark = #{record.bbdRemark,jdbcType=VARCHAR},
      after_the = #{record.afterThe,jdbcType=VARCHAR},
      at_quantity = #{record.atQuantity,jdbcType=VARCHAR},
      at_remark = #{record.atRemark,jdbcType=VARCHAR},
      bottom_ark_layer_board = #{record.bottomArkLayerBoard,jdbcType=VARCHAR},
      balb_quantity = #{record.balbQuantity,jdbcType=VARCHAR},
      balb_remark = #{record.balbRemark,jdbcType=VARCHAR},
      c_quantity = #{record.cQuantity,jdbcType=VARCHAR},
      c_remark = #{record.cRemark,jdbcType=VARCHAR},
      power_brand = #{record.powerBrand,jdbcType=VARCHAR},
      power_digits = #{record.powerDigits,jdbcType=VARCHAR},
      power_shell_color = #{record.powerShellColor,jdbcType=VARCHAR},
      power_socket_way = #{record.powerSocketWay,jdbcType=VARCHAR},
      power_cord = #{record.powerCord,jdbcType=VARCHAR},
      power_wiring = #{record.powerWiring,jdbcType=VARCHAR},
      power_wiring_length = #{record.powerWiringLength,jdbcType=VARCHAR},
      power_plug = #{record.powerPlug,jdbcType=VARCHAR},
      p_quantity = #{record.pQuantity,jdbcType=VARCHAR},
      other_power = #{record.otherPower,jdbcType=VARCHAR},
      op_quantity = #{record.opQuantity,jdbcType=VARCHAR},
      op_remark = #{record.opRemark,jdbcType=VARCHAR},
      nc_quantity = #{record.ncQuantity,jdbcType=VARCHAR},
      nc_remark = #{record.ncRemark,jdbcType=VARCHAR},
      mv_quantity = #{record.mvQuantity,jdbcType=VARCHAR},
      mv_remark = #{record.mvRemark,jdbcType=VARCHAR},
      sal_work_card_subsidiary_id = #{record.salWorkCardSubsidiaryId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqWithBLOBs" >
    update sal_work_card_dsq
    <set >
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=VARCHAR},
      </if>
      <if test="bottomBackDoor != null" >
        bottom_back_door = #{bottomBackDoor,jdbcType=VARCHAR},
      </if>
      <if test="bbdQuantity != null" >
        bbd_quantity = #{bbdQuantity,jdbcType=VARCHAR},
      </if>
      <if test="bbdRemark != null" >
        bbd_remark = #{bbdRemark,jdbcType=VARCHAR},
      </if>
      <if test="afterThe != null" >
        after_the = #{afterThe,jdbcType=VARCHAR},
      </if>
      <if test="atQuantity != null" >
        at_quantity = #{atQuantity,jdbcType=VARCHAR},
      </if>
      <if test="atRemark != null" >
        at_remark = #{atRemark,jdbcType=VARCHAR},
      </if>
      <if test="bottomArkLayerBoard != null" >
        bottom_ark_layer_board = #{bottomArkLayerBoard,jdbcType=VARCHAR},
      </if>
      <if test="balbQuantity != null" >
        balb_quantity = #{balbQuantity,jdbcType=VARCHAR},
      </if>
      <if test="balbRemark != null" >
        balb_remark = #{balbRemark,jdbcType=VARCHAR},
      </if>
      <if test="cQuantity != null" >
        c_quantity = #{cQuantity,jdbcType=VARCHAR},
      </if>
      <if test="cRemark != null" >
        c_remark = #{cRemark,jdbcType=VARCHAR},
      </if>
      <if test="powerBrand != null" >
        power_brand = #{powerBrand,jdbcType=VARCHAR},
      </if>
      <if test="powerDigits != null" >
        power_digits = #{powerDigits,jdbcType=VARCHAR},
      </if>
      <if test="powerShellColor != null" >
        power_shell_color = #{powerShellColor,jdbcType=VARCHAR},
      </if>
      <if test="powerSocketWay != null" >
        power_socket_way = #{powerSocketWay,jdbcType=VARCHAR},
      </if>
      <if test="powerCord != null" >
        power_cord = #{powerCord,jdbcType=VARCHAR},
      </if>
      <if test="powerWiring != null" >
        power_wiring = #{powerWiring,jdbcType=VARCHAR},
      </if>
      <if test="powerWiringLength != null" >
        power_wiring_length = #{powerWiringLength,jdbcType=VARCHAR},
      </if>
      <if test="powerPlug != null" >
        power_plug = #{powerPlug,jdbcType=VARCHAR},
      </if>
      <if test="pQuantity != null" >
        p_quantity = #{pQuantity,jdbcType=VARCHAR},
      </if>
      <if test="otherPower != null" >
        other_power = #{otherPower,jdbcType=VARCHAR},
      </if>
      <if test="opQuantity != null" >
        op_quantity = #{opQuantity,jdbcType=VARCHAR},
      </if>
      <if test="opRemark != null" >
        op_remark = #{opRemark,jdbcType=VARCHAR},
      </if>
      <if test="ncQuantity != null" >
        nc_quantity = #{ncQuantity,jdbcType=VARCHAR},
      </if>
      <if test="ncRemark != null" >
        nc_remark = #{ncRemark,jdbcType=VARCHAR},
      </if>
      <if test="mvQuantity != null" >
        mv_quantity = #{mvQuantity,jdbcType=VARCHAR},
      </if>
      <if test="mvRemark != null" >
        mv_remark = #{mvRemark,jdbcType=VARCHAR},
      </if>
      <if test="salWorkCardSubsidiaryId != null" >
        sal_work_card_subsidiary_id = #{salWorkCardSubsidiaryId,jdbcType=VARCHAR},
      </if>
      <if test="bedplateColor != null" >
        bedplate_color = #{bedplateColor,jdbcType=LONGVARCHAR},
      </if>
      <if test="bcRemark != null" >
        bc_remark = #{bcRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="pRemark != null" >
        p_remark = #{pRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsqWithBLOBs" >
    update sal_work_card_dsq
    set sequence = #{sequence,jdbcType=VARCHAR},
      bottom_back_door = #{bottomBackDoor,jdbcType=VARCHAR},
      bbd_quantity = #{bbdQuantity,jdbcType=VARCHAR},
      bbd_remark = #{bbdRemark,jdbcType=VARCHAR},
      after_the = #{afterThe,jdbcType=VARCHAR},
      at_quantity = #{atQuantity,jdbcType=VARCHAR},
      at_remark = #{atRemark,jdbcType=VARCHAR},
      bottom_ark_layer_board = #{bottomArkLayerBoard,jdbcType=VARCHAR},
      balb_quantity = #{balbQuantity,jdbcType=VARCHAR},
      balb_remark = #{balbRemark,jdbcType=VARCHAR},
      c_quantity = #{cQuantity,jdbcType=VARCHAR},
      c_remark = #{cRemark,jdbcType=VARCHAR},
      power_brand = #{powerBrand,jdbcType=VARCHAR},
      power_digits = #{powerDigits,jdbcType=VARCHAR},
      power_shell_color = #{powerShellColor,jdbcType=VARCHAR},
      power_socket_way = #{powerSocketWay,jdbcType=VARCHAR},
      power_cord = #{powerCord,jdbcType=VARCHAR},
      power_wiring = #{powerWiring,jdbcType=VARCHAR},
      power_wiring_length = #{powerWiringLength,jdbcType=VARCHAR},
      power_plug = #{powerPlug,jdbcType=VARCHAR},
      p_quantity = #{pQuantity,jdbcType=VARCHAR},
      other_power = #{otherPower,jdbcType=VARCHAR},
      op_quantity = #{opQuantity,jdbcType=VARCHAR},
      op_remark = #{opRemark,jdbcType=VARCHAR},
      nc_quantity = #{ncQuantity,jdbcType=VARCHAR},
      nc_remark = #{ncRemark,jdbcType=VARCHAR},
      mv_quantity = #{mvQuantity,jdbcType=VARCHAR},
      mv_remark = #{mvRemark,jdbcType=VARCHAR},
      sal_work_card_subsidiary_id = #{salWorkCardSubsidiaryId,jdbcType=VARCHAR},
      bedplate_color = #{bedplateColor,jdbcType=LONGVARCHAR},
      bc_remark = #{bcRemark,jdbcType=LONGVARCHAR},
      p_remark = #{pRemark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.chiucheung.po.sales.workcard.SalWorkCardDsq" >
    update sal_work_card_dsq
    set sequence = #{sequence,jdbcType=VARCHAR},
      bottom_back_door = #{bottomBackDoor,jdbcType=VARCHAR},
      bbd_quantity = #{bbdQuantity,jdbcType=VARCHAR},
      bbd_remark = #{bbdRemark,jdbcType=VARCHAR},
      after_the = #{afterThe,jdbcType=VARCHAR},
      at_quantity = #{atQuantity,jdbcType=VARCHAR},
      at_remark = #{atRemark,jdbcType=VARCHAR},
      bottom_ark_layer_board = #{bottomArkLayerBoard,jdbcType=VARCHAR},
      balb_quantity = #{balbQuantity,jdbcType=VARCHAR},
      balb_remark = #{balbRemark,jdbcType=VARCHAR},
      c_quantity = #{cQuantity,jdbcType=VARCHAR},
      c_remark = #{cRemark,jdbcType=VARCHAR},
      power_brand = #{powerBrand,jdbcType=VARCHAR},
      power_digits = #{powerDigits,jdbcType=VARCHAR},
      power_shell_color = #{powerShellColor,jdbcType=VARCHAR},
      power_socket_way = #{powerSocketWay,jdbcType=VARCHAR},
      power_cord = #{powerCord,jdbcType=VARCHAR},
      power_wiring = #{powerWiring,jdbcType=VARCHAR},
      power_wiring_length = #{powerWiringLength,jdbcType=VARCHAR},
      power_plug = #{powerPlug,jdbcType=VARCHAR},
      p_quantity = #{pQuantity,jdbcType=VARCHAR},
      other_power = #{otherPower,jdbcType=VARCHAR},
      op_quantity = #{opQuantity,jdbcType=VARCHAR},
      op_remark = #{opRemark,jdbcType=VARCHAR},
      nc_quantity = #{ncQuantity,jdbcType=VARCHAR},
      nc_remark = #{ncRemark,jdbcType=VARCHAR},
      mv_quantity = #{mvQuantity,jdbcType=VARCHAR},
      mv_remark = #{mvRemark,jdbcType=VARCHAR},
      sal_work_card_subsidiary_id = #{salWorkCardSubsidiaryId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>