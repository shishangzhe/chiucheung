<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.chiucheung.dao.mapper.production.material.ProMaterialGuidingPriceMapper" >
  <resultMap id="BaseResultMap" type="cn.chiucheung.po.production.material.ProMaterialGuidingPrice" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="material_id" property="materialId" jdbcType="VARCHAR" />
    <result column="original_price" property="originalPrice" jdbcType="DECIMAL" />
    <result column="new_price" property="newPrice" jdbcType="DECIMAL" />
    <result column="audit_status" property="auditStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, material_id, original_price, new_price, audit_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.chiucheung.po.production.material.ProMaterialGuidingPriceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pro_material_guiding_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.chiucheung.po.production.material.ProMaterialGuidingPriceExample" >
    delete from pro_material_guiding_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.chiucheung.po.production.material.ProMaterialGuidingPrice" >
    insert into pro_material_guiding_price (id, material_id, original_price, 
      new_price, audit_status)
    values (#{id,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, #{originalPrice,jdbcType=DECIMAL}, 
      #{newPrice,jdbcType=DECIMAL}, #{auditStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.chiucheung.po.production.material.ProMaterialGuidingPrice" >
    insert into pro_material_guiding_price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="originalPrice != null" >
        original_price,
      </if>
      <if test="newPrice != null" >
        new_price,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null" >
        #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="newPrice != null" >
        #{newPrice,jdbcType=DECIMAL},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.chiucheung.po.production.material.ProMaterialGuidingPriceExample" resultType="java.lang.Integer" >
    select count(*) from pro_material_guiding_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pro_material_guiding_price
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.originalPrice != null" >
        original_price = #{record.originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.newPrice != null" >
        new_price = #{record.newPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.auditStatus != null" >
        audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pro_material_guiding_price
    set id = #{record.id,jdbcType=VARCHAR},
      material_id = #{record.materialId,jdbcType=VARCHAR},
      original_price = #{record.originalPrice,jdbcType=DECIMAL},
      new_price = #{record.newPrice,jdbcType=DECIMAL},
      audit_status = #{record.auditStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>













    <!--自定义sql语句-->
    <!--多条更新关联物料的价格信息-->
    <update id="updateStatue" parameterType="java.util.List">
        update pro_material_guiding_price
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="audit_status = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when material_id=#{item.materialId} then #{item.auditStatus}
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="item" index="index" >
            material_id = #{item.materialId}
        </foreach>
    </update>



    <!-- 查询所有的物料 -->
    <select id="findAllWarMaterialList" parameterType="cn.chiucheung.pojo.warehouse.material.WarMaterialQueryVo" resultType="cn.chiucheung.po.warehouse.material.WarMaterial">
        SELECT
        m.id id,
        m.material_code materialCode,
        materialType.dictionarie_name materialType,
        m.material_name materialName,
        m.applicable_product applicableProduct,
        classification.dictionarie_name classification,
        materialProperties.dictionarie_name materialProperties,
        specifications.dictionarie_name specifications,
        length.dictionarie_name length,
        width.dictionarie_name width,
        height.dictionarie_name height,
        depth.dictionarie_name depth,
        color.dictionarie_name color,
        purchaseUnit.dictionarie_name purchaseUnit,
        m.purchase_quantity_accuracy purchaseQuantityAccuracy,
        useUnit.dictionarie_name useUnit,
        m.use_quantity_accuracy useQuantityAccuracy,
        unitConversionFormula.dictionarie_name unitConversionFormula,
        m.batch batch,
        m.procurement_cycle procurementCycle,
        m.division division,
        m.production_workshop productionWorkshop,
        m.lowest_warehousing_quantity lowestWarehousingQuantity,
        m.highest_warehousing_quantity highestWarehousingQuantity,
        m.once_produce_quantity onceProduceQuantity,
        m.min_produce_quantity minProduceQuantity,
        m.drawing_number drawingNumber,
        inspectionStandard.dictionarie_name inspectionStandard,
        inspectionWay.dictionarie_name inspectionWay,
        warehouse.dictionarie_name warehouse,
        warehousePositions.dictionarie_name warehousePositions,
        <if test="!isQuery">
            m.state state,
        </if>
        mf.id fileId,
        remark remark,
        m.pro_product_technology_work_hours_id proProductTechnologyWorkHoursId,
        m.total_time totalTime,
        m.total_artificial_time totalArtificialTime,
        mp.original_price originalPrice,
        mp.new_price newPrice
        FROM
        (
        SELECT
        m.*,
        t.id pro_product_technology_work_hours_id,
        t.total_time,
        t.total_artificial_time
        FROM
        war_material m
        LEFT JOIN pro_product_technology_work_hours t ON m.id = t.war_material_id
        ) m
        <if test="relationStartandBomQuery != null and relationStartandBomQuery">
            LEFT JOIN eng_standard_bom b ON b.war_material_id = m.id
        </if>
        LEFT JOIN war_material_file mf ON mf.war_material_id = m.id
        LEFT JOIN pro_material_guiding_price mp ON mp.material_id = m.id
        LEFT JOIN war_base_data materialType ON materialType.dictionarie_code = m.material_type AND materialType.keyword = '类型'
        LEFT JOIN war_base_data classification ON classification.dictionarie_code = m.classification AND classification.keyword = '分类'
        LEFT JOIN war_base_data materialProperties ON materialProperties.dictionarie_code = m.material_properties AND materialProperties.keyword = '物料属性'
        LEFT JOIN war_base_data specifications ON specifications.dictionarie_code = m.specifications AND specifications.keyword = '规格型号'
        LEFT JOIN war_base_data color ON color.dictionarie_code = m.color AND color.keyword = '颜色'
        LEFT JOIN war_base_data length ON length.dictionarie_code = m.length AND length.keyword = '长度'
        LEFT JOIN war_base_data width ON width.dictionarie_code = m.width AND width.keyword = '宽度'
        LEFT JOIN war_base_data height ON height.dictionarie_code = m.height AND height.keyword = '高度'
        LEFT JOIN war_base_data depth ON depth.dictionarie_code = m.depth AND depth.keyword = '深度'
        LEFT JOIN war_base_data purchaseUnit ON purchaseUnit.dictionarie_code = m.purchase_unit AND purchaseUnit.keyword = '单位'
        LEFT JOIN war_base_data useUnit ON useUnit.dictionarie_code = m.use_unit AND useUnit.keyword = '单位'

        LEFT JOIN war_base_data unitConversionFormula ON unitConversionFormula.dictionarie_code = m.unit_conversion_formula AND unitConversionFormula.keyword = '换算公式'

        LEFT JOIN war_base_data inspectionStandard ON inspectionStandard.dictionarie_code = m.inspection_standard AND inspectionStandard.keyword = '检验标准'
        LEFT JOIN war_base_data inspectionWay ON inspectionWay.dictionarie_code = m.inspection_way AND inspectionWay.keyword = '检验方式'
        LEFT JOIN war_base_data warehouse ON warehouse.dictionarie_code = m.warehouse AND warehouse.keyword = '仓库'
        LEFT JOIN war_base_data warehousePositions ON warehousePositions.dictionarie_code = m.warehouse_positions AND warehousePositions.keyword = '仓位'
        WHERE 1=1
        <if test="relationStartandBomQuery != null and relationStartandBomQuery">
            AND b.id  IS NULL
        </if>
        <if test="isQuery">
            <if test="materialCode != null and materialCode != ''">
                AND m.material_code LIKE '%${materialCode}%'
            </if>
            <if test="materialName != null and materialName != ''">
                AND m.material_name LIKE '%${materialName}%'
            </if>
            <if test="materialType != null and materialType != ''">
                AND m.material_type = #{materialType}
            </if>
            <if test="applicableProduct != null and applicableProduct != ''">
                AND FIND_IN_SET(#{applicableProduct},applicable_product)
            </if>
            <if test="classification != null and classification != ''">
                AND m.classification = #{classification}
            </if>
            <if test="materialProperties != null and materialProperties != ''">
                AND m.material_properties = #{materialProperties}
            </if>
            <if test="specifications != null and specifications!= ''">
                AND m.specifications = #{specifications}
            </if>
            <if test="length != null and length != ''">
                AND m.length = #{length}
            </if>
            <if test="height != null and height != ''">
                AND m.height = #{height}
            </if>
            <if test="width != null and width != ''">
                AND m.width = #{width}
            </if>
            <if test="depth != null and depth != ''">
                AND m.depth = #{depth}
            </if>
            <if test="color != null and color != ''">
                AND m.color = #{color}
            </if>
            <if test="warehouse != null and warehouse != ''">
                AND m.warehouse = #{warehouse}
            </if>
            <if test="warehousePositions != null and warehousePositions != ''">
                AND m.warehouse_positions = #{warehousePositions}
            </if>
            <!-- 不查找物料的分组 -->
            <if test="state != null and state != ''">
                AND m.state IS NULL
            </if>
            <!--根据开关按钮状态查找数据-->
            <if test="switchState == 'off'">
                AND mp.audit_status = '未审核'
            </if>
            <if test="switchState == 'on'">
                AND mp.audit_status = '审核'
            </if>
        </if>
        <if test="!isQuery">
            <if test="materialCodeForExpand == null or materialCodeForExpand == ''">
                AND LENGTH(m.material_code)-LENGTH(REPLACE(m.material_code,'.','')) = 0
            </if>
            <if test="materialCodeForExpand != null and materialCodeForExpand != ''">
                AND m.material_code LIKE '${materialCodeForExpand}.%' AND LENGTH(m.material_code)-LENGTH(REPLACE(m.material_code,'.','')) = #{level}
            </if>
            <if test="state != null and state != ''">
                AND m.state = #{state}
            </if>
        </if>
        <!-- AND materialType.dictionarie_name IS NOT NULL -->
        <if test="sort != null and sort != ''">
            ORDER by #{sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            ORDER by material_code
        </if>
        <if test="page != 0 and rows != 0">
            LIMIT #{startPage},#{rows}
        </if>
    </select>

    <!-- 查询所有的物料的总数 -->
    <select id="findAllWarMaterialTotal" parameterType="cn.chiucheung.pojo.warehouse.material.WarMaterialQueryVo" resultType="string">
        SELECT
        COUNT(*)
        FROM
        war_material m
        <if test="relationStartandBomQuery != null and relationStartandBomQuery">
            LEFT JOIN eng_standard_bom b ON b.war_material_id = m.id
        </if>
        LEFT JOIN war_material_price mp ON mp.material_id = m.id
        WHERE 1=1
        <if test="relationStartandBomQuery != null and relationStartandBomQuery">
            AND b.id  IS NULL
        </if>
        <if test="isQuery">
            <if test="materialCode != null and materialCode != ''">
                AND m.material_code LIKE '%${materialCode}%'
            </if>
            <if test="materialName != null and materialName != ''">
                AND m.material_name LIKE '%${materialName}%'
            </if>
            <if test="materialType != null and materialType != ''">
                AND m.material_type = #{materialType}
            </if>
            <if test="applicableProduct != null and applicableProduct != ''">
                AND FIND_IN_SET(#{applicableProduct},applicable_product)
            </if>
            <if test="classification != null and classification != ''">
                AND m.classification = #{classification}
            </if>
            <if test="materialProperties != null and materialProperties != ''">
                AND m.material_properties = #{materialProperties}
            </if>
            <if test="specifications != null and specifications!= ''">
                AND m.specifications = #{specifications}
            </if>
            <if test="length != null and length != ''">
                AND m.length = #{length}
            </if>
            <if test="height != null and height != ''">
                AND m.height = #{height}
            </if>
            <if test="width != null and width != ''">
                AND m.width = #{width}
            </if>
            <if test="depth != null and depth != ''">
                AND m.depth = #{depth}
            </if>
            <if test="color != null and color != ''">
                AND m.color = #{color}
            </if>
            <if test="warehouse != null and warehouse != ''">
                AND m.warehouse = #{warehouse}
            </if>
            <if test="warehousePositions != null and warehousePositions != ''">
                AND m.warehouse_positions = #{warehousePositions}
            </if>
            <if test="state != null and state != ''"><!-- 不查找物料的分组 -->
                AND m.state IS NULL
            </if>
            <!--根据开关按钮状态查找数据-->
            <if test="switchState == 'off'">
                AND mp.audit_status = '未审核'
            </if>
            <if test="switchState == 'on'">
                AND mp.audit_status = '审核'
            </if>
        </if>
        <if test="!isQuery">
            <if test="materialCodeForExpand == null or materialCodeForExpand == ''">
                AND LENGTH(m.material_code)-LENGTH(REPLACE(m.material_code,'.','')) = 0
            </if>
            <if test="materialCodeForExpand != null and materialCodeForExpand != ''">
                AND m.material_code LIKE '${materialCodeForExpand}.%' AND LENGTH(m.material_code)-LENGTH(REPLACE(m.material_code,'.','')) = #{level}
            </if>
            <if test="state != null and state != ''">
                AND m.state = #{state}
            </if>
        </if>
    </select>

</mapper>